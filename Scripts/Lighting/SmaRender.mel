global string $renderPrefix;global string $DestinationPath;global string $DestinationPath2;global int $firstFrame;global int $lastFrame;global string $fileExtension;global string $quote;global string $sceneCameras[];global int $cameraArraySize;global proc smaRender(){global int $cameraArraySize;$sceneCameras = `ls -ca`;$cameraArraySize = (size($sceneCameras));print $cameraArraySize;if (`window -exists smaRender_ui` == true) deleteUI smaRender_ui;  string $mainWindow = `window	-title "SmaRender"	-menuBar true	-maximizeButton false	-minimizeButton true	-sizeable true	-resizeToFitChildren false	smaRender_ui`;	frameLayout -label "SmaRender Overrides"	-height 120	-width 485	-fn "boldLabelFont"	-mw 5	-mh 5;columnLayout;	menu -label "File";menuItem -label "Reset" -command smaRender resetButton;menuItem -label "Close" -command "deleteUI smaRender_ui" closeButton;menu -label "About";menuItem -label "About" -command smaRenderAbout;columnLayout;	 textFieldGrp	-label "File Name Prefix" 	-text "Enter your prefix" 	prefixGroup;separator -w 410 ;	 textFieldGrp	-label "First Frame Number" 	-text "0" 	firstFrameGroup;separator -w 410 ;	 textFieldGrp	-label "Last Frame Number" 	-text "30" 	lastFrameGroup;separator -w 410 ;	optionMenuGrp -label "File Extension" -cc extensionChange fileTypeGroup;	menuItem -label "IFF";	menuItem -label "PSD"; 	menuItem -label "PIX"; 	menuItem -label "BMP";	menuItem -label "DDS";	menuItem -label "GIF";	menuItem -label "JPG"; 	menuItem -label "CIN"; 	menuItem -label "PNG";	menuItem -label "EPS";	menuItem -label "YUV";	menuItem -label "RGB"; 	menuItem -label "PIC";	menuItem -label "TGA";	menuItem -label "TIF";	menuItem -label "RLA";separator -w 410 ;	optionMenuGrp -label "File Syntax" animationExtGroup;	menuItem -label "name.#.ext";	menuItem -label "name#.ext";	menuItem -label "name_#.ext";separator -w 410 ;	optionMenuGrp -label "Cameras" cameraGroup;for ($i=0;$i<$cameraArraySize;$i++){	menuItem -label $sceneCameras[$i];}separator -w 410 ;	 textFieldButtonGrp -label "Destination Path" -text "Select Your Destination Path" -buttonLabel "..." -buttonCommand pickDestination DestinationPathField;separator -w 410 ;textFieldGrp -label "Frame Padding" -text "0" framePaddingGroup;separator -w 410 ;	button	-label "Render!" -w 410 -command smaRenderData;	button	-label "Close" -w 410 		closeButton;	button -edit -command "deleteUI smaRender_ui" closeButton;	showWindow $mainWindow;window -e -width 435 -height 330 $mainWindow;}global proc smaRenderData(){global string $renderPrefix;global string $DestinationPath;global string $DestinationPath2;global string $DestinationPath3;global int $firstFrame;global int $lastFrame;global string $fileExtension;global int $paddingNumber;global string $cameraDump;$cameraDump =`optionMenuGrp -q -v cameraGroup`;select -cl;select $cameraDump;setNamedPanelLayout "Single Perspective View"; updateToolbox();lookThroughModelPanelClipped $cameraDump modelPanel4 0.001 1000;$renderPrefix = `textFieldGrp -q -text prefixGroup`;if ($renderPrefix == "Enter your prefix"){error "You haven't chosen a prefix.";}$firstFrame = `textFieldGrp -q -text firstFrameGroup`;$lastFrame = `textFieldGrp -q -text lastFrameGroup`;$fileExtension = `optionMenuGrp -q -v fileTypeGroup`;$DestinationPath2 = `textFieldButtonGrp -q -text DestinationPathField`;if ($paddingNumber == "Select Your Destination Path"){error "You haven't chosen a destination path.";}$paddingNumber = `textFieldGrp -q -text framePaddingGroup`;renderConfirmation;}global proc smaRenderStart(){global string $renderPrefix;global string $DestinationPath;global string $DestinationPath2;global int $firstFrame;global int $lastFrame;global string $fileExtension;global string $quote;global int $paddingNumber;$quote = "\"";string $customAnimationExt;for ($i = $firstFrame; $i <= $lastFrame; $i++){string $animationExtValue = `optionMenuGrp -q -v animationExtGroup`;if ($animationExtValue == "name.#.ext"){	if (($paddingNumber == 0) || ($paddingNumber == 1))		{		$customAnimationExt = ($renderPrefix + "." + $i);		}	if ($paddingNumber ==2)		{			if ($i <10)			{			$customAnimationExt = ($renderPrefix + "." + "0" + $i);			}			if ($i>=10)			{			$customAnimationExt = ($renderPrefix + "." + $i);			}		}	if ($paddingNumber ==3)		{			if ($i <10)			{			$customAnimationExt = ($renderPrefix + "." + "00" + $i);			}			if (($i>=10)&&($i <100))			{			$customAnimationExt = ($renderPrefix + "." + "0" + $i);			}			if ($i>=100)			{			$customAnimationExt = ($renderPrefix + "." + $i);			}		}	if ($paddingNumber ==4)		{			if ($i <10)			{			$customAnimationExt = ($renderPrefix + "." + "000" + $i);			}			if (($i>=10)&&($i <100))			{			$customAnimationExt = ($renderPrefix + "." + "00" + $i);			}			if (($i>=100)&&($i <1000))			{			$customAnimationExt = ($renderPrefix + "." + "0" + $i);			}			if ($i>=1000)			{			$customAnimationExt = ($renderPrefix + "." + $i);			}	if ($paddingNumber ==5)		{			if ($i <10)			{			$customAnimationExt = ($renderPrefix + "." + "0000" + $i);			}			if (($i>=10)&&($i <100))			{			$customAnimationExt = ($renderPrefix + "." + "000" + $i);			}			if (($i>=100)&&($i <1000))			{			$customAnimationExt = ($renderPrefix + "." + "00" + $i);			}			if (($i>=1000)&&($i <10000))			{			$customAnimationExt = ($renderPrefix + "." + "0" + $i);			}			if ($i>=10000)			{			$customAnimationExt = ($renderPrefix + "." + $i);			}		}		}}if ($animationExtValue == "name#.ext"){	if (($paddingNumber == 0) || ($paddingNumber == 1))		{		$customAnimationExt = ($renderPrefix + $i);		}	if ($paddingNumber ==2)		{			if ($i <10)			{			$customAnimationExt = ($renderPrefix + "0" + $i);			}			if ($i>=10)			{			$customAnimationExt = ($renderPrefix + $i);			}		}	if ($paddingNumber ==3)		{			if ($i <10)			{			$customAnimationExt = ($renderPrefix + "00" + $i);			}			if (($i>=10)&&($i <100))			{			$customAnimationExt = ($renderPrefix + "0" + $i);			}			if ($i>=100)			{			$customAnimationExt = ($renderPrefix + $i);			}		}	if ($paddingNumber ==4)		{			if ($i <10)			{			$customAnimationExt = ($renderPrefix + "000" + $i);			}			if (($i>=10)&&($i <100))			{			$customAnimationExt = ($renderPrefix + "00" + $i);			}			if (($i>=100)&&($i <1000))			{			$customAnimationExt = ($renderPrefix + "0" + $i);			}			if ($i>=1000)			{			$customAnimationExt = ($renderPrefix + $i);			}	if ($paddingNumber ==5)		{			if ($i <10)			{			$customAnimationExt = ($renderPrefix + "0000" + $i);			}			if (($i>=10)&&($i <100))			{			$customAnimationExt = ($renderPrefix + "000" + $i);			}			if (($i>=100)&&($i <1000))			{			$customAnimationExt = ($renderPrefix + "00" + $i);			}			if (($i>=1000)&&($i <10000))			{			$customAnimationExt = ($renderPrefix + "0" + $i);			}			if ($i>=10000)			{			$customAnimationExt = ($renderPrefix + $i);			}		}		}}if ($animationExtValue == "name_#.ext"){	if (($paddingNumber == 0) || ($paddingNumber == 1))		{		$customAnimationExt = ($renderPrefix + "_" + $i);		}	if ($paddingNumber ==2)		{			if ($i <10)			{			$customAnimationExt = ($renderPrefix + "_" + "0" + $i);			}			if ($i>=10)			{			$customAnimationExt = ($renderPrefix + "_" + $i);			}		}	if ($paddingNumber ==3)		{			if ($i <10)			{			$customAnimationExt = ($renderPrefix + "_" + "00" + $i);			}			if (($i>=10)&&($i <100))			{			$customAnimationExt = ($renderPrefix + "_" + "0" + $i);			}			if ($i>=100)			{			$customAnimationExt = ($renderPrefix + "_" + $i);			}		}	if ($paddingNumber ==4)		{			if ($i <10)			{			$customAnimationExt = ($renderPrefix + "_" + "000" + $i);			}			if (($i>=10)&&($i <100))			{			$customAnimationExt = ($renderPrefix + "_" + "00" + $i);			}			if (($i>=100)&&($i <1000))			{			$customAnimationExt = ($renderPrefix + "_" + "0" + $i);			}			if ($i>=1000)			{			$customAnimationExt = ($renderPrefix + "_" + $i);			}	if ($paddingNumber ==5)		{			if ($i <10)			{			$customAnimationExt = ($renderPrefix + "_" + "0000" + $i);			}			if (($i>=10)&&($i <100))			{			$customAnimationExt = ($renderPrefix + "_" + "000" + $i);			}			if (($i>=100)&&($i <1000))			{			$customAnimationExt = ($renderPrefix + "_" + "00" + $i);			}			if (($i>=1000)&&($i <10000))			{			$customAnimationExt = ($renderPrefix + "_" + "0" + $i);			}			if ($i>=10000)			{			$customAnimationExt = ($renderPrefix + "_" + $i);			}		}		}}if (($paddingNumber == 0) || ($paddingNumber == 1)){renderWindowRender redoPreviousRender renderView;renderWindowSaveImageCallback "renderView" (($DestinationPath2 + "\\") + $customAnimationExt) ($quote + $fileExtension + $quote);}if ($paddingNumber ==2){if ($i <10){renderWindowRender redoPreviousRender renderView;renderWindowSaveImageCallback "renderView" (($DestinationPath2 + "\\") + $customAnimationExt) ($quote + $fileExtension + $quote);}if ($i>=10){renderWindowRender redoPreviousRender renderView;renderWindowSaveImageCallback "renderView" (($DestinationPath2 + "\\") + $customAnimationExt) ($quote + $fileExtension + $quote);}}if ($paddingNumber ==3){if ($i <10){renderWindowRender redoPreviousRender renderView;renderWindowSaveImageCallback "renderView" (($DestinationPath2 + "\\") + $customAnimationExt) ($quote + $fileExtension + $quote);}if (($i>=10)&&($i <100)){renderWindowRender redoPreviousRender renderView;renderWindowSaveImageCallback "renderView" (($DestinationPath2 + "\\") + $customAnimationExt) ($quote + $fileExtension + $quote);}if ($i >=100){renderWindowRender redoPreviousRender renderView;renderWindowSaveImageCallback "renderView" (($DestinationPath2 + "\\") + $customAnimationExt) ($quote + $fileExtension + $quote);}}if ($paddingNumber ==4){if ($i <10){renderWindowRender redoPreviousRender renderView;renderWindowSaveImageCallback "renderView" (($DestinationPath2 + "\\") + $customAnimationExt) ($quote + $fileExtension + $quote);}if (($i>=10)&&($i <100)){renderWindowRender redoPreviousRender renderView;renderWindowSaveImageCallback "renderView" (($DestinationPath2 + "\\") + $customAnimationExt) ($quote + $fileExtension + $quote);}if (($i>=100)&&($i <1000)){renderWindowRender redoPreviousRender renderView;renderWindowSaveImageCallback "renderView" (($DestinationPath2 + "\\") + $customAnimationExt) ($quote + $fileExtension + $quote);}if ($i>=1000){renderWindowRender redoPreviousRender renderView;renderWindowSaveImageCallback "renderView" (($DestinationPath2 + "\\") + $customAnimationExt) ($quote + $fileExtension + $quote);}}if ($paddingNumber ==5){if ($i <10){renderWindowRender redoPreviousRender renderView;renderWindowSaveImageCallback "renderView" (($DestinationPath2 + "\\") + $customAnimationExt) ($quote + $fileExtension + $quote);}if (($i>=10)&&($i <100)){renderWindowRender redoPreviousRender renderView;renderWindowSaveImageCallback "renderView" (($DestinationPath2 + "\\") + $customAnimationExt) ($quote + $fileExtension + $quote);}if (($i>=100)&&($i<1000)){renderWindowRender redoPreviousRender renderView;renderWindowSaveImageCallback "renderView" (($DestinationPath2 + "\\") + $customAnimationExt) ($quote + $fileExtension + $quote);}if (($i>=1000)&&($i <10000)){renderWindowRender redoPreviousRender renderView;renderWindowSaveImageCallback "renderView" (($DestinationPath2 + "\\") + $customAnimationExt) ($quote + $fileExtension + $quote);}if ($i>=10000){renderWindowRender redoPreviousRender renderView;renderWindowSaveImageCallback "renderView" (($DestinationPath2 + "\\") + $customAnimationExt) ($quote + $fileExtension + $quote);}}currentTime $i;floatField -edit -value `currentTime -query`  MayaWindow|mayaMainWindowForm|TimeSliderForm|formLayout16|formLayout17|formLayout45|floatField1;}}global proc pickDestination(){global string $DestinationPath;	 $DestinationPath = `fileBrowserDialog -m 4 -fc setDestination -ft "directory" -an "Choose A Destination Path"`;}global proc int setDestination(string $dirpath,string $type){	global string $DestinationPath;	$DestinationPath = $dirpath;	 textFieldButtonGrp -e -text $DestinationPath DestinationPathField;	return true;}global proc renderConfirmation(){string $renderConfirm = `confirmDialog -title "Ready To Render" -message ("Are you sure you want to render?" + "\n" +		"You won't be able to cancel the render until it's done...")		-ma "center" 		-button "Yes" -button "No" -defaultButton "Yes" 		-cancelButton "No" -dismissString "No"`;if ($renderConfirm == "Yes"){smaRenderStart;}else{print "Render Cancelled!";}}global proc extensionChange(){string $imageType = `optionMenuGrp -q -v fileTypeGroup`;if ($imageType == "IFF"){setAttr "defaultRenderGlobals.imageFormat" 7;}if ($imageType == "PSD"){setAttr "defaultRenderGlobals.imageFormat" 31;}if ($imageType == "PIX"){setAttr "defaultRenderGlobals.imageFormat" 6;}if ($imageType == "BMP"){setAttr "defaultRenderGlobals.imageFormat" 20;}if ($imageType == "DDS"){setAttr "defaultRenderGlobals.imageFormat" 35;}if ($imageType == "GIF"){setAttr "defaultRenderGlobals.imageFormat" 0;}if ($imageType == "JPG"){setAttr "defaultRenderGlobals.imageFormat" 8;}if ($imageType == "CIN"){setAttr "defaultRenderGlobals.imageFormat" 11;}if ($imageType == "IFF"){setAttr "defaultRenderGlobals.imageFormat" 7;}if ($imageType == "PNG"){setAttr "defaultRenderGlobals.imageFormat" 32;}if ($imageType == "EPS"){setAttr "defaultRenderGlobals.imageFormat" 9;}if ($imageType == "YUV"){setAttr "defaultRenderGlobals.imageFormat" 12;}if ($imageType == "RGB"){setAttr "defaultRenderGlobals.imageFormat" 5;}if ($imageType == "PIC"){setAttr "defaultRenderGlobals.imageFormat" 1;}if ($imageType == "TGA"){setAttr "defaultRenderGlobals.imageFormat" 19;}if ($imageType == "TIF"){setAttr "defaultRenderGlobals.imageFormat" 3;}if ($imageType == "RLA"){setAttr "defaultRenderGlobals.imageFormat" 2;}}global proc smaRenderAbout(){if (`window -exists smaRenderAbout_ui` == true) deleteUI smaRenderAbout_ui;  			string $aboutWindow = `window				-title "How To Use"				-maximizeButton false				-minimizeButton false				-sizeable false				-resizeToFitChildren true				smaRenderAbout_ui`;									columnLayout				-adjustableColumn 1				-columnAttach "both" 0				-rowSpacing 10				-columnWidth 450				-columnAlign "center"				variableColumnLayout; 		 	text -label ("SmaRender Tool" + "\n" + 					"________________" + "\n" + 					"Version 1.0" + "\n" + 					"by George Smaragdis 2007" + "\n" + 					"________________" + "\n" +					"Fill in the override fields with your preferences." + "\n" +					"Before you render, make sure you have all the settings" + "\n" +					"set to what you want, once you start the batch render" + "\n" +					"you can't stop it until it's done." + "\n" +					"VARIOUS    NOTES" + "\n" + 					"________________" + "\n" + 					"If you want to re-render, delete the old files, or you will be" + "\n" +					"asked to replace each frame, one by one." + "\n" +					"Feel free to add/improve/completely change this script, as long as I get  a copy :)" + "\n" +					"________________" + "\n" + 					"Contact information:" + "\n" +					"________________" + "\n" + 					"Email: George@georgesmaragdis.com" + "\n" +					"Website: www.smaragdis.net");			button	-label "Close"			closeButton;			button -edit -command "deleteUI smaRenderAbout_ui" closeButton;			window -e -width 530 -height 330 $aboutWindow;	showWindow $aboutWindow;};