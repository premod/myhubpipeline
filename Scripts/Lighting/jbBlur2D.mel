/* This file downloaded from Highend3d.com
''  
''  Highend3d.com File Information:
''  
''    Script Name: jbBlur2D
''    Author:  
''    Last Updated: Sep 07, 2007
''    Update/Change this file at:
''    http://Highend3d.com/maya/downloads/mel_scripts/rendering/misc/4359.html
''  
''  Please do not alter any information above this line
''  it is generated dynamically by Highend3d.com and will
''  be changed automatically on any updates.
*/
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////                                                                              ////////       jbBlur2D v0.3 beta                                           					////////                                                                              ////////       (c) 2007 by Jan Berger                                      						////////                                                                              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////*==>	Description:		jbBlur2D is a MEL-script for Maya. It allows you to apply 2D motion Blur to 2D images		which contain motion vector data provided by the Maya Software renderer. You can also		use these motion vector images to apply 2D Motion Blur to images rendered not with the		Maya Software renderer, for example images rendered Mental ray or any other renderer.		jbBlur2D is actually just a GUI (Graphical User Interface) to existing MEL commands ( doBlur ). 		The intention to create this GUI was to make the process of applying 2D motion blur more interactive,		since the results are displayed directly in the GUI. Please note that 2D motion blur has		its limitations, if there is complex motion in the image, artifacts may appear and 3D motion blur		could be more appropriate.		==>	Installation:		1. Copy the jbBlur2D.mel file to a maya script folder, for example:		   C:\Dokumente und Einstellungen\admin\Eigene Dateien\maya\8.0\scripts				2. Restart Maya 				3. Type "jbBlur2D" in the command line. The jbBlur2D-GUI should appear.				4. Optionally you can select the "jbBlur2D" text in the command line and drag and drop		   it onto the shelve. This creates a shelf button. Just hit it and the jbBlur2D-GUI should appear.		==>	Usage:		1. With the open jbBlur2D-GUI select a color image folder at the bottom left side ( blue "Browse" button ).			 Select the folder which contains the images you want to apply 2D motion blur to.				2. After selecting a folder you should see your image files listed in the textScrollList.			 Double click on an image to see it in the GUI.				3. Hit the orange "Apply Motion Blur" button. After a few seconds you should see your new image 			( original name with a "Blur2D_" prefix ) with motion Blur applied 			(Note: the original image will not be overwritten, make sure your file contains motion vectors (.iff))				4. Adjust the Motion Blur Settings and hit the orange button again to see the results		==>	Batch processing:		Select multiple image files in the color image file list and hit the orange "Apply Motion Blur" button.		==>	Specifying extra motion vector files :		1. Activate the "Use motion vector file" check box ( the green list becomes active)				2. Select the folder containing you images containing the motion vector you wish to use		3. Select one image on the left ( color file list ) and one on the right side ( motion vector file list )			 ( if they are from a sequence, make sure its the same frame number, the script won`t check that for you)		4. Hit the orange "Apply Motion Blur" button.		5. Batch processing works by selecting the same number of images on the left and on the right list, then   		   hit the orange "Apply Motion Blur" button.		   ==>	2D motion Blur parameters:		For a description go to the jbBlur2D-GUI options menu and select "Maya Help on 2D motion blur"		Usually turning off "Smooth Color" is a good idea.==>	Disclaimer:		THE MEL-SCRIPT IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. JAN BERGER		DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES		INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,		MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 		OF DEALING, USAGE, OR TRADE PRACTICE.		==>	Change Log:		ver. 0.3 beta		- added image conversion, tested on Mac and PC			current formats are: 			-tif			-map			-iff		- fixed a big Mac bug (getenv TEMP failed)		- image updating while blurring has been fixed, when the user didn`t double-click on an image the control was still a text control when the batch started		- minor code enhancements		ver. 0.21 beta		- a little bit more Mac tweaking		- removed command from end of file		ver. 0.2 beta		- fixed the "use motion vector file" option box under OSX		- files are listed in alphabetical order, note that the "sort" MEL-command is used which sorts all capital letters first then the small letters.		- "Smooth Color" is off by default, in my experience this gives better results	 (if you have used this before, it is probably still on)		- Changes made to the image height and width display options are displayed immediately */	 global proc jbBlur2D (){	if ( `window -exists jbBlur2D`) 		deleteUI jbBlur2D;	window -w 1100 -h 800 -t "jbBlur2D - Apply 2D Motion Blur to images - v0.3 beta - www.janberger.de" jbBlur2D;	global string $jbBlur2DCtrls[];	menuBarLayout ;		menu -l "Options";			menuItem -l "Maya Help on 2D motion blur" -c "showHelp -docs \"Commands/doBlur.html\";";			menuItem -divider true;  			menuItem -l "Save Settings" -c "jbBlur2D_saveSettings" ;			menuItem -l "Reset Settings" -c "jbBlur2D_resetSettings; jbBlur2D_refreshUI;" ;			menuItem -divider true;  			menuItem -sm 1 -label "Convert images to" -to 1;						menuItem -l "tif" -c "jbBlur2D_convertImages imf_copy 0 0";						menuItem -l "map" -c "jbBlur2D_convertImages imf_copy 0 1";						menuItem -l "iff" -c "jbBlur2D_convertImages imf_copy 0 2";	string $form = `formLayout`;			string $pane = `paneLayout -st 10 -ps 1 100 75 -configuration "horizontal2" -bgc .8 .8 .6 jbBlur2DPane1`;						$form1 = `formLayout -bgc .8 .8 .6`;							// === Controls				$jbBlur2DCtrls[0]  = `floatField -v 1.0 -pre 3 -w 40 -bgc .8 .8 .6 -cc jbBlur2D_saveSettings`;				$jbBlur2DCtrls[1]  = `floatField -v 2.0 -pre 3 -w 40 -bgc .8 .8 .6 -cc jbBlur2D_saveSettings`;				$jbBlur2DCtrls[2]	 = `intField -v 1 -w 40 -bgc .8 .8 .6 -cc jbBlur2D_saveSettings`;				$jbBlur2DCtrls[3]  = `checkBox -v 1 -l "" -bgc .8 .8 .6 -cc jbBlur2D_saveSettings`; 				$jbBlur2DCtrls[10] = `checkBox -cc "jbBlur2D_activateList;jbBlur2D_saveSettings;" -v 1 -l "" -bgc .8 .8 .6 `; 				$jbBlur2DCtrls[4]  = `button -c "jbBlur2D_blurImage" -l "Apply Motion Blur" -w 135  -bgc 1 .8 .2 `;								// === Text Labels				string $text1 = `text -l "Length" -bgc .8 .8 .6`; 				string $text2 = `text -l "Sharpness" -bgc .8 .8 .6`; 				string $text3 = `text -l "Smooth" -bgc .8 .8 .6`; 				string $text4 = `text -l "Smooth Color" -bgc .8 .8 .6`; 				string $text5 = `text -l "Use motion vector file" -bgc .8 .8 .6 -w 140 `; 				string $text6 = `text -l "Display Options" -fn "boldLabelFont" -w 150 -bgc .8 .8 .6`; 				string $text7 = `text -l "Image width" -bgc .8 .8 .6`; 				string $text8 = `text -l "Image height" -bgc .8 .8 .6`; 				string $text9 = `text -l "Motion Blur Options" -fn "boldLabelFont" -w 150 -bgc .8 .8 .6`; 				$jbBlur2DCtrls[14] = `text -l "Current image: None" -fn "boldLabelFont" -bgc .8 .8 .6`; 								// === Image				$jbBlur2DCtrls[13]  = `scrollLayout -w 800 -h 600 -bgc  .8 .8 .6 `;							$jbBlur2DCtrls[9]  = `text -l "Please double click an image from the color or motion vector list."`;				setParent..;				// == Options				$jbBlur2DCtrls[11]  = `intField -v 800 -w 40 -bgc .8 .8 .6 -cc "jbBlur2D_saveSettings;jbBlur2D_refreshUI;jbBlur2D_viewImage 3;"`;				$jbBlur2DCtrls[12]  = `intField -v 600 -w 40 -bgc .8 .8 .6 -cc "jbBlur2D_saveSettings;jbBlur2D_refreshUI;jbBlur2D_viewImage 3;"`;			formLayout -e 					// === Controls				-ac  $jbBlur2DCtrls[0] top 5 $text9 				-af $jbBlur2DCtrls[0] left 100				-ac $jbBlur2DCtrls[1] top 5 $jbBlur2DCtrls[0]				-af $jbBlur2DCtrls[1] left 100				-ac $jbBlur2DCtrls[2] top 5 $jbBlur2DCtrls[1]				-af $jbBlur2DCtrls[2] left 100				-ac $jbBlur2DCtrls[3] top 5 $jbBlur2DCtrls[2]				-af $jbBlur2DCtrls[3] left 150				-ac $jbBlur2DCtrls[10] top 5 $jbBlur2DCtrls[3]				-af $jbBlur2DCtrls[10] left 150				-ac $jbBlur2DCtrls[4] top 8 $jbBlur2DCtrls[10]				-af $jbBlur2DCtrls[4] left 5				-ac $jbBlur2DCtrls[11] top 5 $text6 				-af $jbBlur2DCtrls[11]  left 100				-ac $jbBlur2DCtrls[12] top 5 $jbBlur2DCtrls[11]				-af $jbBlur2DCtrls[12]  left 100								// === Text Labels				-af $text9 top 8				-af $text9 left 5				-ac $text1 top 8 $text9 				-af $text1 left 5				-ac $text2 top 8 $jbBlur2DCtrls[0]				-af $text2 left 5				-ac $text3 top 8 $jbBlur2DCtrls[1]				-af $text3 left 5				-ac $text4 top 5 $jbBlur2DCtrls[2]				-af $text4 left 5				-ac $text5 top 6 $jbBlur2DCtrls[3]				-af $text5 left 4				-ac $text6 top 18 $jbBlur2DCtrls[4]				-af $text6 left 6				-ac $text7 top 6 $text6 				-af $text7 left 6				-ac $text8 top 6 $jbBlur2DCtrls[11]				-af $text8 left 6				-af $jbBlur2DCtrls[14] left 200				-af $jbBlur2DCtrls[14] top 8								// === Image				-ac $jbBlur2DCtrls[13] left 40 $jbBlur2DCtrls[0]				-af $jbBlur2DCtrls[13] top 28				-af $jbBlur2DCtrls[13] bottom 0				-af $jbBlur2DCtrls[13] right 0			$form1;							setParent..;				setParent..;		paneLayout -p $pane -configuration "vertical2" -bgc .8 .8 .6;							$form2 = `formLayout -numberOfDivisions 100`; 								$jbBlur2DCtrls[5] = `textFieldButtonGrp -bc "jbBlur2D_saveSettings;jbBlur2D_SetPath 1" -adj 2 -tx "C:/Projekte/elektrolyt/images/" -cw1 20  -cw 3 76 -l "Color Image Folder" -bl "Browse..." -bgc 0.6 0.6 0.8  -cc "jbBlur2D_RefreshFileList 1;jbBlur2D_saveSettings"`; 				$jbBlur2DCtrls[6] = `textScrollList -aas 0 -ams 1 -dcc "jbBlur2D_viewImage 1"  `;				popupMenu -p $jbBlur2DCtrls[6];					menuItem -sm 1 -label "Convert images to" -to 1;						menuItem -l "tif" -c "jbBlur2D_convertImages imf_copy 0 0";						menuItem -l "map" -c "jbBlur2D_convertImages imf_copy 0 1";						menuItem -l "iff" -c "jbBlur2D_convertImages imf_copy 0 2";					setParent -menu ..;						menuItem -label "Delete selected" -c "jbBlur2D_deleteSelected 1";				setParent $form2;				$button1 = `button -c "jbBlur2D_viewSequence 1" -h 24 -w 100 -l "View Sequence" -bgc 0.6 0.6 0.8  `; 				$button2 = `button -c "jbBlur2D_RefreshFileList 1" -h 24 -w 100 -l "Refresh List" -bgc 0.6 0.6 0.8  `; 				$button3 = `button -c "jbBlur2D_deleteSelected 1" -h 24 -w 100 -l "Delete Selected" -bgc 0.6 0.6 0.8  `; 							formLayout -e 				-af $jbBlur2DCtrls[5] top 0				-af $jbBlur2DCtrls[5] left 0				-af $jbBlur2DCtrls[5] right 0							-ac $jbBlur2DCtrls[6] top 0 $jbBlur2DCtrls[5]				-af $jbBlur2DCtrls[6] left 0				-af $jbBlur2DCtrls[6] bottom 24				-af $jbBlur2DCtrls[6] right 0							-af $button1 bottom 0				-af $button1 left 0				-ap $button1 right 0 33							-af $button2 bottom 0				-ap $button2 left 0 33				-ap $button2 right 0 66							-af $button3 bottom 0				-ap $button3 left 0 66				-af $button3 right 0 							$form2;				setParent..;						$form3 = `formLayout`; 				$jbBlur2DCtrls[7] = `textFieldButtonGrp -bc "jbBlur2D_saveSettings;jbBlur2D_SetPath 2" -adj 2 -cw 3 77 -tx "C:/Projekte/elektrolyt/images/" -cw1 20  -l "Motion Vector Folder" -bl "Browse..." -bgc 0.6 0.8 0.6  -cc "jbBlur2D_RefreshFileList 2;jbBlur2D_saveSettings"`; 				$jbBlur2DCtrls[8] = `textScrollList -aas 0 -ams 1 -dcc "jbBlur2D_viewImage 2" `;				popupMenu -p $jbBlur2DCtrls[8];					menuItem -sm 1 -label "Convert images to" -to 1;						menuItem -l "tif" -c "jbBlur2D_convertImages imf_copy 1 0";						menuItem -l "map" -c "jbBlur2D_convertImages imf_copy 1 1";						menuItem -l "iff" -c "jbBlur2D_convertImages imf_copy 1 2";					setParent -menu ..;						menuItem -label "Delete selected" -c "jbBlur2D_deleteSelected 1";				setParent $form3;				$button1 = `button -c "jbBlur2D_viewSequence 2" -h 24 -w 100 -l "View Sequence" -bgc 0.6 0.8 0.6 `; 				$button2 = `button -c "jbBlur2D_RefreshFileList 2" -h 24 -w 100 -l "Refresh List" -bgc 0.6 0.8 0.6  `; 				$button3 = `button -c "jbBlur2D_deleteSelected 2"  -h 24 -w 100 -l "Delete Selected" -bgc 0.6 0.8 0.6  `;			formLayout -e 				 				-af $jbBlur2DCtrls[7] top 0				-af $jbBlur2DCtrls[7] left 0				-af $jbBlur2DCtrls[7] right 0								-ac $jbBlur2DCtrls[8] top 0 $jbBlur2DCtrls[7]				-af $jbBlur2DCtrls[8] left 0				-af $jbBlur2DCtrls[8] bottom 24				-af $jbBlur2DCtrls[8] right 0				-af $button1 bottom 0				-af $button1 left 0				-ap $button1 right 0 33							-af $button2 bottom 0				-ap $button2 left 0 33				-ap $button2 right 0 66							-af $button3 bottom 0				-ap $button3 left 0 66				-af $button3 right 0 			$form3;								setParent..;		setParent..;	setParent..;	formLayout -e 		-af $pane top 0		-af $pane bottom 0		-af $pane left 0		-af $pane right 0	$form;	jbBlur2D_refreshUI;	showWindow;}global proc jbBlur2D_SetPath ( int $mode){		global int $jbBlur2D_currentUI_mode;	$jbBlur2D_currentUI_mode = $mode;		fileBrowserDialog -ds 1 -m 4 -fc "jbBlur2D_SetPathDoIt" -an "Library Folder" -om "Select";}global proc jbBlur2D_SetPathDoIt (string $file, string $fileType){	global int $jbBlur2D_currentUI_mode;	global string $jbBlur2DCtrls[];		int $mode = $jbBlur2D_currentUI_mode;	string $slash = "/";	if (`about -os` == "mac")		$slash ="";		if ( $file != "")	{		print ($file+"\n");	}	if (`window -exists jbBlur2D`)	{			if ( $mode == 1 )		{			textFieldButtonGrp -e -text ($file+$slash) $jbBlur2DCtrls[5]; 						}		if ( $mode == 2)		{			textFieldButtonGrp -e -text ($file+$slash) $jbBlur2DCtrls[7]; 			}		jbBlur2D_RefreshFileList $mode;		jbBlur2D_saveSettings;	}}global proc jbBlur2D_RefreshFileList (int $mode){	global string $jbBlur2DCtrls[];		string $folder;	string $textList;		string $slash = "/";	if (`about -os` == "mac")		$slash ="";	if ( $mode == 1 )	{		$folder = `textFieldButtonGrp -q -tx $jbBlur2DCtrls[5]`;		$textList = $jbBlur2DCtrls[6] ;	}	if ( $mode == 2 )	{		$folder = `textFieldButtonGrp -q -tx $jbBlur2DCtrls[7]`;		$textList = $jbBlur2DCtrls[8] ;	}	if (`filetest -d $folder`)	{		string $files[] = `getFileList -fld ($folder+$slash )`;				int $no = 0;		string $foundFiles[];		for ($file in $files)		{			if ((`filetest -f ($folder + $slash + $file)`) && (`gmatch $file "*.*"`))			{				$foundFiles[$no] = $file;				$no++;			}		}		string $selection[] = `textScrollList -q -si $textList`;				textScrollList -e -ra $textList;		for ( $f in `sort $foundFiles` ) 		{			textScrollList -e -a $f $textList;							for ( $select in $selection )			{				if ($select == $f)					textScrollList -e -si $f $textList;			}		}				}	else	{		if ( $folder != "Please select the image folder" && $folder != "Please select the motion vector folder" ) 			warning ( "jbBlur2D_RefreshFileList: " + $folder + " does not exist!");		}}global proc jbBlur2D_activateList (){	global string $jbBlur2DCtrls[];	int $value = `checkBox -q -v $jbBlur2DCtrls[10]`;	textFieldButtonGrp -e -en $value $jbBlur2DCtrls[7];	textScrollList -e -en $value $jbBlur2DCtrls[8]; 	}global proc jbBlur2D_viewImage (int $mode){	global string $jbBlur2DCtrls[];	global int $jbBlur2DCurrentMode;	if ($mode == 3)	{		if ($jbBlur2DCurrentMode!=0)			$mode = $jbBlur2DCurrentMode;	}	string $list ;	string $path ;	if ( $mode == 1 )	{		$list = $jbBlur2DCtrls[6];		$path = $jbBlur2DCtrls[5];		$jbBlur2DCurrentMode = 1;	}	if ( $mode == 2 )	{		$list = $jbBlur2DCtrls[8];		$path = $jbBlur2DCtrls[7];			$jbBlur2DCurrentMode = 2;  	}	if ($mode != 3)	{		string $file[] = `textScrollList -q -si $list`;		$path = `textFieldButtonGrp -q -tx $path`;		$path += $file[0] ;			int $int[] = `optionVar -q jbBlur2D_optionVarInt`;			if (`filetest -r $path`  &&  size ($file) > 0 )		{			deleteUI  $jbBlur2DCtrls[9];			$jbBlur2DCtrls[9] = `image -p  $jbBlur2DCtrls[13] -i $path -w $int[3] -h $int[4] `;			text -e -l ("Current image: " + $path )	$jbBlur2DCtrls[14];				}		else		{			if ( $path != "Please select the image folder" && $path != "Please select the motion vector folder" &&  size ($file) > 0) 				warning ("jbBlur2D_viewImage: " + $path + " is not valid.");		}	}}global proc jbBlur2D_blurImage (){	global string $jbBlur2DCtrls[];	string $list1 ;	string $path1 ;	float $length = `floatField -q -v $jbBlur2DCtrls[0]`;	float $sharpness = `floatField -q -v $jbBlur2DCtrls[1]`;	int $smooth = `intField -q -v $jbBlur2DCtrls[2]`;	int $smoothColor = `checkBox -q -v $jbBlur2DCtrls[3]`;	int $useMotionFile = `checkBox -q -v $jbBlur2DCtrls[10]`;	int $int[] = `optionVar -q jbBlur2D_optionVarInt`;	int $debug = false;	$list1 = $jbBlur2DCtrls[6];	$path1 = $jbBlur2DCtrls[5];	$path2 = $jbBlur2DCtrls[7];	$list2 = $jbBlur2DCtrls[8];	string $file1[] = `textScrollList -q -si $list1`;	$path1 = `textFieldButtonGrp -q -tx $path1`;	int $size = size ( $file1 );		string $imagePath = $path1 ;			string $file2[] = `textScrollList -q -si $list2`;	$path2 = `textFieldButtonGrp -q -tx $path2`;			int $error = false;		if ( size ( $file1 ) == 0 )	{		warning "No color file selected!";		$error = true;	}	if ( $useMotionFile )	{		if ( size ( $file1 ) != size ( $file2 ))		{			warning "Selected number of color files does not match selected number of motion files!";			$error = true;		}	}		if (!$error)	{		if ( $debug)		{			print ( "File Count: " + $size + "\n");			print ( "Path 1: " + $path1 + "\n");			print ( "Path 2: " + $path2 + "\n");			print ( "length : " + $length + "\n");			print ( "sharpness : " + $sharpness + "\n");			print ( "smooth : " + $smooth + "\n");			print ( "smoothColor : " + $smoothColor + "\n");		}		string $motion;				float $factor =  $size * 0.01;				progressWindow  -title ( "Applying Motion Blur ") -progress 0 -min 0 -max 100 -status "Please wait applying motion blur" -isInterruptable 1;		for ( $no = 0 ; $no<$size;$no++)		{			if ( `progressWindow -query -isCancelled` ) 			{					progressWindow -ep;            			break;			}			int $progress = ($no / $factor);			            		progressWindow -e -progress $progress -status ( $no + " of " + $size + " images processed");                        			$path1_temp = $path1 + $file1[$no] ;			$path2_temp = $path2 + $file2[$no] ;								string $tempColor  =  $path1 + "/blur2dColorTemp.iff" ;			string $tempMotion =  $path1 + "/blur2dMotionTemp.iff" ;			string $tempBlur   =  $path1 + "/blur2dColorTemp_blur.iff" ;						if ( $debug)			{				print ("tempColor " + $tempColor+ "\n");				print ("tempMotion " + $tempMotion+ "\n");				print ("tempBlur " + $tempBlur+ "\n");			}			sysFile -copy $tempColor $path1_temp;				// Use extra motion File?			if (!$useMotionFile )				$tempMotion = $tempColor;			else				sysFile -copy $tempMotion $path2_temp;						waitCursor -state on;						string $cmd = "doBlur -length " + $length + " -sharpness " + $sharpness + " -smooth " + $smooth + " -smoothColor " + $smoothColor + " -c " + "\"" + $tempColor + "\"" + " -v " + "\"" + $tempMotion + "\"" ;			string $result = `evalEcho ($cmd)`;						waitCursor -state off;						string $buff[];			clear $buff;						tokenize $file1[$no] "." $buff;			$motion = $imagePath  + "Blur2D_" + $buff[0] ;							for ( $no2 = 1 ; $no2 < size ( $buff ) ; $no2++)			{				$motion +=	 "." + $buff[$no2];			}				sysFile -copy $motion $tempBlur;									if (`objectTypeUI $jbBlur2DCtrls[9]` == "staticText")			{				deleteUI  $jbBlur2DCtrls[9];				$jbBlur2DCtrls[9] = `image -p  $jbBlur2DCtrls[13] -i $motion -w $int[3] -h $int[4] `;			}			else				image -i $motion $jbBlur2DCtrls[9];			text -e -l ("Current image: " + $motion )	$jbBlur2DCtrls[14];					print ("Motion blurred image saved to : " + $motion + "\n");			sysFile -delete $tempColor;			sysFile -delete $tempMotion;			sysFile -delete $tempBlur;				}		progressWindow -ep;				print ( ($no+1) + " images written to: " + $imagePath + "\n" );				jbBlur2D_RefreshFileList 1;	}}global proc jbBlur2D_saveSettings (){	global string $jbBlur2DCtrls[];	float $length = `floatField -q -v $jbBlur2DCtrls[0]`;	float $sharpness = `floatField -q -v $jbBlur2DCtrls[1]`;	int $smooth = `intField -q -v $jbBlur2DCtrls[2]`;	int $smoothColor = `checkBox -q -v $jbBlur2DCtrls[3]`;	int $useMotion = `checkBox -q -v $jbBlur2DCtrls[10]`;	$folder1 = `textFieldButtonGrp -q -tx $jbBlur2DCtrls[5]`;	$folder2 = `textFieldButtonGrp -q -tx $jbBlur2DCtrls[7]`;	int $imageWidth = `intField -q -v $jbBlur2DCtrls[11]`;	int $imageHeight= `intField -q -v $jbBlur2DCtrls[12]`;	optionVar -fv jbBlur2D_optionVarFloat $length ;	optionVar -fva jbBlur2D_optionVarFloat $sharpness ;		optionVar -iv jbBlur2D_optionVarInt $smooth ;	optionVar -iva jbBlur2D_optionVarInt $smoothColor ;		optionVar -iva jbBlur2D_optionVarInt $useMotion ;	optionVar -iva jbBlur2D_optionVarInt $imageWidth ;	optionVar -iva jbBlur2D_optionVarInt $imageHeight;		optionVar -sv jbBlur2D_optionVarString $folder1 ;		optionVar -sva jbBlur2D_optionVarString $folder2 ;	}global proc jbBlur2D_resetSettings (){	optionVar -fv jbBlur2D_optionVarFloat 2 ;	optionVar -fva jbBlur2D_optionVarFloat 1 ;		optionVar -iv jbBlur2D_optionVarInt 2 ;	optionVar -iva jbBlur2D_optionVarInt 0 ;		optionVar -iva jbBlur2D_optionVarInt 0 ;	optionVar -iva jbBlur2D_optionVarInt 800 ;	optionVar -iva jbBlur2D_optionVarInt 600 ;		optionVar -sv jbBlur2D_optionVarString "Please select the image folder";		optionVar -sva jbBlur2D_optionVarString "Please select the motion vector folder";		global string $jbBlur2DCtrls[];	textScrollList -e -ra $jbBlur2DCtrls[6];	textScrollList -e -ra $jbBlur2DCtrls[8];}global proc jbBlur2D_refreshUI (){		global string $jbBlur2DCtrls[];	if (!`optionVar -exists jbBlur2D_optionVarFloat`)		jbBlur2D_resetSettings;		float $float[] = `optionVar -q jbBlur2D_optionVarFloat`;	int $int[] = `optionVar -q jbBlur2D_optionVarInt`;	string $string[] = `optionVar -q jbBlur2D_optionVarString`;	floatField -e -v $float[0] $jbBlur2DCtrls[0];	floatField -e -v $float[1] $jbBlur2DCtrls[1];	intField -e -v $int[0] $jbBlur2DCtrls[2];	checkBox -e -v $int[1] $jbBlur2DCtrls[3];	checkBox -e -v $int[2] $jbBlur2DCtrls[10];	textFieldButtonGrp -e -tx $string[0] $jbBlur2DCtrls[5];	textFieldButtonGrp -e -tx $string[1] $jbBlur2DCtrls[7];	intField -e -v $int[3] $jbBlur2DCtrls[11];	intField -e -v $int[4] $jbBlur2DCtrls[12];		jbBlur2D_RefreshFileList 1;	jbBlur2D_RefreshFileList 2;	textFieldButtonGrp -e -en $int[2] $jbBlur2DCtrls[7];	textScrollList -e -en $int[2] $jbBlur2DCtrls[8];		scrollLayout -e -w ($int[3]+24) -h ($int[4]+50) $jbBlur2DCtrls[13]; 	//image -e -w $int[3] -h $int[4] $jbBlur2DCtrls[9];}global proc jbBlur2D_viewSequence (int $mode){		global string $jbBlur2DCtrls[];		int $index;	if ( $mode == 1 )		$index = 6;	else		$index = 8;			string $sel[] = `textScrollList -q -si $jbBlur2DCtrls[$index]`; 		if ( size ( $sel ) > 0 )	{		$file = `textFieldButtonGrp -q -tx $jbBlur2DCtrls[5]` + $sel[0];		launchFcheckCmd $file 1;	}	else		warning "Please select an image file from the color file list."; }global proc jbBlur2D_deleteSelected (int $mode){		global string $jbBlur2DCtrls[];		int $index;	if ( $mode == 1 )		$index = 6;	else		$index = 8;			string $sel[] = `textScrollList -q -si $jbBlur2DCtrls[$index]`; 		if ( size ( $sel ) > 0 )	{		string $con =`confirmDialog -t "Confirm deleting files" -message ("Are you sure you want to delete " + size ( $sel ) + " selected files?") -button "Yes" -button "No" -defaultButton "Yes" -cancelButton "No" -dismissString "No"`;				if ($con == "Yes" )		{			for ( $s in $sel )			{				$file = `textFieldButtonGrp -q -tx $jbBlur2DCtrls[5]` + $s;				sysFile -delete $file;			}			jbBlur2D_RefreshFileList $mode;		} 		}	else		warning "Please select an image file from the color file list."; }global proc jbBlur2D_convertImages (string $converter, int $list, int $fileType){	int $debug = false;	global string $jbBlur2DCtrls[];	int $pathNumber = 5;	int $listNumber = 6;	int $countFiles=0;	if ( $list ) 	{		$pathNumber = 7;		$listNumber = 8;	}	string $sel[] = `textScrollList -q -si $jbBlur2DCtrls[$listNumber]`; 	string $path = `textFieldButtonGrp -q -tx $jbBlur2DCtrls[$pathNumber]`;	print "================================\n";	print "Converting images";	print ("Converter: " + $converter + "\n");	print ("File type: " + $fileType + "\n");	print ("Image Path: " + $path + "\n");	print ("Image Count: " + size ( $sel ) + "\n");	string $suffix;	string $cmd;	string $buff[];	int $count;	string $file;	string $newFile;	string $newFilePath;	int $goAhead = true;	int $size = size ( $sel);	if ( $fileType == 0 )		$suffix = "tif";	if ( $fileType == 1 )		$suffix = "map";	if ( $fileType == 2 )		$suffix = "iff";		if ( $size > 0 )	{		float $factor =  $size * 0.01;		progressWindow  -title ( "Converting images ") -progress 0 -min 0 -max 100 -status "Please wait while the images are converted" -isInterruptable 1;		for ( $no = 0 ; $no < $size ; $no++)		{			if ( `progressWindow -query -isCancelled` ) 			{					progressWindow -ep;            			break;			}			int $progress = ($no / $factor);			            		progressWindow -e -progress $progress -status ( $no + " of " + $size + " images converted");				clear $buff;			$newFile = "";			$count = `tokenize $sel[$no] "." $buff`;			for ( $no2 = 0 ; $no2 < $count -1 ; $no2++)				$newFile += $buff[$no2]+".";			$file = $path + $sel[$no];			$newFile = $newFile + $suffix;			$newFilePath = $path + $newFile ;			print ("Converting: " + $sel[$no] );			if ( `filetest -r $file`)			{				if (`filetest -r $newFilePath` )				{					string $con =`confirmDialog -t "Confirm deleting files" -message ("A file with the name \n" + $newFile + "\nexists already, delete existing file?") -button "Yes" -button "No" -defaultButton "Yes" -cancelButton "No" -dismissString "No"`;							if ($con == "Yes" )					{						sysFile -delete $newFilePath ;					} 					else						$goAhead = false;				}				if ( $goAhead )				{					$cmd = "imf_copy " + toNativePath( $file ) + " " + toNativePath( $newFilePath ) + " " + $suffix;					system ($cmd);					print "...done\n";					if ( $debug ) print ($cmd+"\n");					$countFiles++;				}				else					print "...skipped\n";			}			else				warning ("File not found: " + $file );		}		progressWindow -ep;		print ( $countFiles + " images converted. See Script Editor for details.\n");	}	else		warning "jbBlur2D_convertImages: No images to convert : (";	jbBlur2D_refreshUI;}