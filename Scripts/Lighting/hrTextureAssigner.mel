global proc hrTextureAssigner()
{
	if (`window -q -ex hrTexLoaderWin`)deleteUI hrTexLoaderWin;
	window -t "High Res Texture Loader" -s 0 hrTexLoaderWin;
	columnLayout -adj true;
	button -l "Load Shaders";
	button -l "Assign Shader Assignments" -c "readShaderInfo";
	button -l "Find obj's Without Material" -c "findWithoutMaterial";
	button -l "File Cleaner";
	window -e -wh 250 146 hrTexLoaderWin;
	showWindow;
}

global proc readShaderInfo()
{
	dConnectAttruburesLighting();
	catch (`modelEditor -edit -displayAppearance boundingBox modelPanel4`);
	catch (`modelEditor -edit -displayAppearance boundingBox modelPanel2`);
	catch (`modelEditor -edit -displayAppearance boundingBox modelPanel3`);
	catch (`modelEditor -edit -displayAppearance boundingBox modelPanel1`);
	string $default[] = {"lambert1","particleCloud1"};
	string $mat[] = `ls -typ "shadingEngine"`;
	string $final[] = stringArrayRemove($default, $mat);
	for($i=0; $i<size($final); $i++)
	{
		select -r $final[$i];
		hyperShade -objects "";
		string $attr[] = `listAttr -l $final[$i]`;
		for($j=0; $j<size($attr); $j++)
		{
			string $name = getAttr ($final[$i]+"."+"Assigned"+$j);
			string $shaderName[] = `ls -r 1 ("*"+$name)`;
			catch(`select -tgl ($shaderName[0])`);
			catch(`sets -e -forceElement $final[$i]`);
			//string $shaderName[] = `ls -r 1 ("*:"+$name)`;
			//catch(`defaultNavigation -source $final[$i] -destination ($shaderName[0]+".instObjGroups[0]") -connectToExisting`);
			//catch(`select -tgl ($shaderName[0])`);
			//catch(`sets -e -forceElement $final[$i]`);
		}
		select -cl;
	}
	print "Assigned Successfully"; 
}

global proc findWithoutMaterial()
{
	select -r lambert1 ;
	hyperShade -objects "";
}

